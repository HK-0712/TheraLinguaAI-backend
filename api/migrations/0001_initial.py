# Generated by Django 5.2.5 on 2025-08-21 03:12

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PracticeSession',
            fields=[
                ('psid', models.AutoField(primary_key=True, serialize=False)),
                ('input_mp3_path', models.CharField(max_length=255)),
                ('output_txt', models.CharField(max_length=255)),
                ('language', models.CharField(max_length=2)),
                ('target_word', models.CharField(max_length=255)),
                ('diffi_level', models.CharField(max_length=20)),
                ('error_rate', models.FloatField()),
                ('full_log', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(default='en', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='usersetting', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProgressSummary',
            fields=[
                ('pid', models.AutoField(primary_key=True, serialize=False)),
                ('language', models.CharField(max_length=2)),
                ('phoneme', models.CharField(max_length=255)),
                ('total_atmp', models.IntegerField(default=0)),
                ('err_amount', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_summary', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'language', 'phoneme')},
            },
        ),
        migrations.CreateModel(
            name='UserStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=2)),
                ('suggested_difficulty_level', models.CharField(blank=True, help_text='Suggested difficulty level', max_length=20)),
                ('current_difficulty_level', models.CharField(default='Kindergarten', help_text='Current difficulty level', max_length=20)),
                ('cur_word', models.CharField(blank=True, help_text='Current test word', max_length=255)),
                ('cur_err', models.CharField(blank=True, help_text='Error phonemes from last test', max_length=255)),
                ('cur_log', models.TextField(blank=True, help_text='Full log from last test')),
                ('test_completed_count', models.IntegerField(default=0, help_text='Completed words in initial test')),
                ('is_test_completed', models.BooleanField(default=False, help_text='Is initial test completed for this language?')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'language')},
            },
        ),
    ]
